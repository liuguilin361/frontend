import { type FieldErrorsMap, type Id, type IdPseudoSeparatorOption } from "./form/main.js";
export interface GetFocusableElementOptions {
    /**
     * @default false
     */
    checkVisibility?: boolean;
}
export declare function getFocusableElement(form: HTMLElement, instanceId: Id, { checkVisibility }?: GetFocusableElementOptions): ((HTMLElement | SVGElement) & Record<"disabled", unknown>) | null;
export declare function getErrorsList(form: HTMLElement, instanceId: Id, options: Required<IdPseudoSeparatorOption>): Element | null;
export interface GetFocusActionOptions extends Required<IdPseudoSeparatorOption>, Partial<GetFocusableElementOptions> {
}
export declare function getFocusAction(form: HTMLElement, instanceId: Id, options: GetFocusActionOptions): (() => void) | null;
export declare function createFocusOnFirstError({ idPseudoSeparator, checkVisibility, }?: Partial<GetFocusActionOptions>): <E>(errors: FieldErrorsMap<E>, e: SubmitEvent) => false | Promise<void>;
