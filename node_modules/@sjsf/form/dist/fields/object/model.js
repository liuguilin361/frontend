import { ADDITIONAL_PROPERTY_FLAG, isSchema, } from "../../core/index.js";
export function generateNewKey(value, preferredKey, additionalPropertyKey) {
    let index = 0;
    let newKey;
    do {
        newKey = additionalPropertyKey(preferredKey, index++);
    } while (newKey in value);
    return newKey;
}
export function createAdditionalPropertyKey(preferredKey, attempt) {
    return attempt === 0 ? preferredKey : `${preferredKey}-${attempt}`;
}
export function createOriginalKeysOrder(properties) {
    const order = [];
    const keys = Object.keys(properties);
    for (const key of keys) {
        const property = properties[key];
        if (!isSchema(property) || ADDITIONAL_PROPERTY_FLAG in property) {
            continue;
        }
        order.push(key);
    }
    if (order.length < keys.length) {
        order.push("*");
    }
    return order;
}
