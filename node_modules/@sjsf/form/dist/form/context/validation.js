import { AdditionalPropertyKeyError, } from "../errors.js";
import { isAdditionalPropertyKeyValidator } from "../validator.js";
export function getErrors(ctx, id) {
    return ctx.errors.get(id) ?? [];
}
export function validateField(ctx, config, value) {
    ctx.fieldsValidation.run(config, value);
}
export function validateAdditionalPropertyKey(ctx, config, key, fieldConfig) {
    const validator = ctx.validator;
    if (!isAdditionalPropertyKeyValidator(validator)) {
        return true;
    }
    const messages = validator.validateAdditionalPropertyKey(key, config.schema);
    ctx.errors.set(fieldConfig.id, messages.map((message) => ({
        propertyTitle: fieldConfig.title,
        message,
        error: new AdditionalPropertyKeyError(),
    })));
    return messages.length === 0;
}
