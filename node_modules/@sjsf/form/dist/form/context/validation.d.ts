import type { Validator } from "../../core/index.js";
import type { Id } from "../id.js";
import type { Config } from "../config.js";
import { type FieldError, type PossibleError } from "../errors.js";
import type { FormValue } from '../model.js';
import type { FormInternalContext } from "./context.js";
export declare function getErrors<V extends Validator>(ctx: FormInternalContext<V>, id: Id): FieldError<PossibleError<V>>[];
export declare function validateField<V extends Validator>(ctx: FormInternalContext<V>, config: Config, value: FormValue): void;
export declare function validateAdditionalPropertyKey<V extends Validator>(ctx: FormInternalContext<V>, config: Config, key: string, fieldConfig: Config): boolean;
