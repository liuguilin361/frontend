import type { Resolved } from "../../lib/resolver.js";
import type { Validator } from "../../core/index.js";
import type { Config } from "../config.js";
import type { CompatibleComponentDefinitions, FoundationalComponentType } from "../components.js";
import type { FormInternalContext } from "./context.js";
export declare function getComponent<T extends FoundationalComponentType, V extends Validator>(ctx: FormInternalContext<V>, type: T, config: Config): Resolved<T, CompatibleComponentDefinitions>;
export declare function getFieldComponent<V extends Validator>(ctx: FormInternalContext<V>, config: Config): import("../components.js").ComponentDefinition<"stringField"> | import("../components.js").ComponentDefinition<"oneOfField"> | import("../components.js").ComponentDefinition<"anyOfField"> | import("../components.js").ComponentDefinition<"enumField"> | import("../components.js").ComponentDefinition<"fileField"> | import("../components.js").ComponentDefinition<"dateField"> | import("../components.js").ComponentDefinition<"numberField"> | import("../components.js").ComponentDefinition<"integerField"> | import("../components.js").ComponentDefinition<"booleanField"> | import("../components.js").ComponentDefinition<"booleanSelectField"> | import("../components.js").ComponentDefinition<"objectField"> | import("../components.js").ComponentDefinition<"arrayField"> | import("../components.js").ComponentDefinition<"tupleField"> | import("../components.js").ComponentDefinition<"multiEnumField"> | import("../components.js").ComponentDefinition<"nullField"> | import("../components.js").ComponentDefinition<"filesField"> | import("../components.js").ComponentDefinition<"tagsField">;
