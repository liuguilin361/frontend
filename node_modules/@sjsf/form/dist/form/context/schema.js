import { isSelect as isSelectInternal, isFilesArray as isFilesArrayInternal, isMultiSelect as isMultiSelectInternal, retrieveSchema as retrieveSchemaInternal, sanitizeDataForNewSchema as sanitizeDataForNewSchemaInternal, getClosestMatchingOption as getClosestMatchingOptionInternal, } from "../../core/index.js";
export function isSelect(ctx, schema) {
    return isSelectInternal(ctx.validator, ctx.merger, schema, ctx.schema);
}
export function isMultiSelect(ctx, schema) {
    return isMultiSelectInternal(ctx.validator, ctx.merger, schema, ctx.schema);
}
export function isFilesArray(ctx, schema) {
    return isFilesArrayInternal(ctx.validator, ctx.merger, schema, ctx.schema);
}
export function retrieveSchema(ctx, schema, formData) {
    return retrieveSchemaInternal(ctx.validator, ctx.merger, schema, ctx.schema, formData);
}
export function sanitizeDataForNewSchema(ctx, newSchema, oldSchema, formData) {
    return sanitizeDataForNewSchemaInternal(ctx.validator, ctx.merger, ctx.schema, newSchema, oldSchema, formData);
}
export function getClosestMatchingOption(ctx, formData, options, selectedOption, discriminatorField) {
    return getClosestMatchingOptionInternal(ctx.validator, ctx.merger, ctx.schema, formData, options, selectedOption, discriminatorField);
}
export function getDefaultFieldState(ctx, schema, formData) {
    return ctx.merger.mergeFormDataAndSchemaDefaults(formData, schema);
}
