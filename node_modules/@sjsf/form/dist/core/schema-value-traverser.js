import { isObject } from "../lib/object.js";
export function* traverseSchemaValue(value, visitor, ctx = { type: "root", path: [] }) {
    if (visitor.onEnter) {
        yield* visitor.onEnter(value, ctx);
    }
    if (Array.isArray(value)) {
        const c = {
            type: "array",
            index: 0,
            path: ctx.path.concat(0),
        };
        for (let index = 0; index < value.length; index++) {
            c.index = index;
            c.path[c.path.length - 1] = index;
            yield* traverseSchemaValue(value[index], visitor, c);
        }
    }
    else if (isObject(value)) {
        const c = {
            type: "record",
            key: "",
            path: ctx.path.concat(""),
        };
        for (const key of Object.keys(value)) {
            c.key = key;
            c.path[c.path.length - 1] = key;
            yield* traverseSchemaValue(value[key], visitor, c);
        }
    }
    if (visitor.onLeave) {
        yield* visitor.onLeave(value, ctx);
    }
}
