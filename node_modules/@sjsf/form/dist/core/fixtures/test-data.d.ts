import { type Schema } from "../schema.js";
import type { EnumOption } from '../enum-option.js';
export declare const oneOfData: {
    name: string;
    flag: boolean;
    inner_spec: {
        name: string;
        special_spec: {
            name: string;
            cpg_params: string;
        };
    };
};
export declare const oneOfSchema: Schema;
export declare const ONE_OF_SCHEMA_OPTIONS: Schema[];
export declare const FIRST_ONE_OF: Schema;
export declare const SECOND_ONE_OF: Schema;
export declare const OPTIONAL_ONE_OF_SCHEMA: Schema;
export declare const OPTIONAL_ONE_OF_SCHEMA_ONEOF: Schema[];
export declare const OPTIONAL_ONE_OF_DATA: {
    flag: boolean;
    inner_obj: {
        foo: string;
    };
};
export declare const SIMPLE_ONE_OF_SCHEMA: Schema;
export declare const FIRST_OPTION_ONE_OF_DATA: {
    flag: boolean;
    inner_spec: {
        name: string;
        special_spec: undefined;
    };
    name: string;
    unique_to_second: undefined;
};
export declare const ONE_OF_SCHEMA_DATA: {
    unique_to_second: number;
    name: string;
    flag: boolean;
    inner_spec: {
        name: string;
        special_spec: {
            name: string;
            cpg_params: string;
        };
    };
};
export declare const ALL_OPTIONS: EnumOption<string>[];
export declare const FALSY_OPTIONS: EnumOption<number | string>[];
export declare const RECURSIVE_REF_ALLOF: Schema;
export declare const RECURSIVE_REF: Schema;
export declare const ERROR_MAPPER: {
    "": string;
    foo: string;
    list: string;
    noMessage: string;
    "list.0": string;
    "list.1": string;
    nested: string;
    "nested.baz": string;
    "nested.blah": string;
};
export declare const TEST_FORM_DATA: {
    foo: string;
    list: string[];
    nested: {
        baz: number;
        blah: boolean;
    };
};
export declare const SUPER_SCHEMA: Schema;
export declare const PROPERTY_DEPENDENCIES: Schema;
export declare const SCHEMA_DEPENDENCIES: Schema;
export declare const SCHEMA_AND_ONEOF_REF_DEPENDENCIES: Schema;
export declare const SCHEMA_AND_REQUIRED_DEPENDENCIES: Schema;
export declare const SCHEMA_WITH_ONEOF_NESTED_DEPENDENCIES: Schema;
export declare const SCHEMA_WITH_SINGLE_CONDITION: Schema;
export declare const SCHEMA_WITH_MULTIPLE_CONDITIONS: Schema;
export declare const SCHEMA_WITH_NESTED_CONDITIONS: Schema;
export declare const SCHEMA_WITH_ARRAY_CONDITION: Schema;
export declare const SCHEMA_WITH_ALLOF_CANNOT_MERGE: Schema;
