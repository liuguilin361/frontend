{
  "version": 3,
  "sources": ["../../@sjsf/form/dist/fields/exports.js", "../../@sjsf/form/dist/fields/combination.svelte", "../../@sjsf/form/dist/lib/keyed-array.svelte.js", "../../@sjsf/form/dist/fields/array/model.js", "../../@sjsf/form/dist/fields/array/context.svelte.js", "../../@sjsf/form/dist/fields/array/array-base.svelte", "../../@sjsf/form/dist/fields/array/array-field.svelte", "../../@sjsf/form/dist/fields/array/tuple-field.svelte", "../../@sjsf/form/dist/fields/array/array-item-field.svelte", "../../@sjsf/form/dist/fields/object/model.js", "../../@sjsf/form/dist/fields/object/context.svelte.js", "../../@sjsf/form/dist/fields/object/object-field.svelte", "../../@sjsf/form/dist/fields/object/object-key-input.svelte", "../../@sjsf/form/dist/fields/object/object-property-field.svelte", "../../@sjsf/form/dist/fields/field-base.svelte", "../../@sjsf/form/dist/fields/boolean.svelte", "../../@sjsf/form/dist/fields/integer.svelte", "../../@sjsf/form/dist/fields/null.svelte", "../../@sjsf/form/dist/fields/number-field.svelte", "../../@sjsf/form/dist/fields/string.svelte", "../../@sjsf/form/dist/fields/any-of.svelte", "../../@sjsf/form/dist/fields/one-of.svelte", "../../@sjsf/form/dist/fields/resolver/definitions.js"],
  "sourcesContent": ["import \"./ui-options.js\";\nimport \"./combination.svelte\";\nexport * from \"./array/exports.js\";\nexport * from \"./object/exports.js\";\nexport { default as booleanField } from \"./boolean.svelte\";\nexport { default as integerField } from \"./integer.svelte\";\nexport { default as nullField } from \"./null.svelte\";\nexport { default as numberField } from \"./number-field.svelte\";\nexport { default as stringField } from \"./string.svelte\";\nexport { default as anyOfField } from \"./any-of.svelte\";\nexport { default as oneOfField } from \"./one-of.svelte\";\n", "<script lang=\"ts\" module>\n  import type { UiSchemaDefinition } from \"../form/index.js\";\n\n  declare module \"../form/index.js\" {\n    interface UiSchemaContent {\n      combinationFieldOptionSelector?: UiSchemaDefinition;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import { untrack } from \"svelte\";\n\n  import {\n    ANY_OF_KEY,\n    getDiscriminatorFieldFromSchema,\n    getSimpleSchemaType,\n    ONE_OF_KEY,\n    type EnumOption,\n  } from \"../core/index.js\";\n  import {\n    type Config,\n    getClosestMatchingOption,\n    getDefaultFieldState,\n    getErrors,\n    retrieveSchema,\n    sanitizeDataForNewSchema,\n    getFormContext,\n    createPseudoId,\n    getComponent,\n    type ComponentProps,\n    getFieldComponent,\n    retrieveUiSchema,\n    retrieveUiOption,\n    uiTitleOption,\n    retrieveTranslate,\n  } from \"../form/index.js\";\n\n  let {\n    value = $bindable(),\n    config,\n    combinationKey,\n    uiOption,\n    translate,\n  }: ComponentProps[\"anyOfField\" | \"oneOfField\"] & {\n    combinationKey: typeof ONE_OF_KEY | typeof ANY_OF_KEY;\n  } = $props();\n\n  const ctx = getFormContext();\n\n  const Template = $derived(getComponent(ctx, \"multiFieldTemplate\", config));\n  const Widget = $derived(getComponent(ctx, \"selectWidget\", config));\n\n  const restFieldConfig = $derived.by(() => {\n    const { [combinationKey]: _, ...restSchema } = config.schema;\n    const restSchemaType = getSimpleSchemaType(restSchema);\n    return restSchemaType !== \"null\"\n      ? {\n          ...config,\n          schema: restSchema,\n        }\n      : null;\n  });\n  const RestSchemaField = $derived(\n    restFieldConfig && getFieldComponent(ctx, restFieldConfig)\n  );\n  const retrievedOptions = $derived(\n    (config.schema[combinationKey] ?? []).map((s) =>\n      typeof s !== \"boolean\" ? retrieveSchema(ctx, s, value) : {}\n    )\n  );\n\n  let readableSelectedOption = $state(0);\n  let writableSelectedOption = $derived(\n    getClosestMatchingOption(\n      ctx,\n      value,\n      retrievedOptions,\n      readableSelectedOption,\n      getDiscriminatorFieldFromSchema(config.schema)\n    )\n  );\n  $effect(() => {\n    const nextSelected = writableSelectedOption;\n    if (readableSelectedOption === nextSelected) {\n      return;\n    }\n    value = untrack(() => {\n      const nextSchema = retrievedOptions[nextSelected];\n      if (nextSchema === undefined) {\n        return undefined;\n      }\n      const oldSchema = retrievedOptions[readableSelectedOption];\n      return getDefaultFieldState(\n        ctx,\n        nextSchema,\n        oldSchema !== undefined\n          ? sanitizeDataForNewSchema(ctx, nextSchema, oldSchema, value)\n          : value\n      );\n    });\n    readableSelectedOption = nextSelected;\n  });\n\n  const optionsUiSchemas = $derived.by(() => {\n    const schemas = config.uiSchema[combinationKey];\n    return Array.isArray(schemas)\n      ? schemas.map((s) => retrieveUiSchema(ctx, s))\n      : [];\n  });\n  const enumOptionLabel = $derived.by(() => {\n    // NOTE: We don't use `config.title` here because we don't want to use\n    // the generated `item-1` type titles as the basis for the new title.\n    const explicitTitle =\n      uiTitleOption(ctx, config.uiSchema) ?? config.schema.title;\n    return explicitTitle\n      ? (index: number) =>\n          translate(\"multi-schema-option-label-with-title\", {\n            index,\n            title: explicitTitle,\n          })\n      : (index: number) => translate(\"multi-schema-option-label\", { index });\n  });\n  const optionTitles = $derived.by(() => {\n    const discriminator = getDiscriminatorFieldFromSchema(config.schema);\n    return retrievedOptions.map((s, i) => {\n      if (discriminator !== undefined) {\n        const uiSchemaDefinition = optionsUiSchemas[i]?.[discriminator];\n        if (\n          typeof uiSchemaDefinition === \"object\" &&\n          !Array.isArray(uiSchemaDefinition)\n        ) {\n          const title = uiTitleOption(\n            ctx,\n            retrieveUiSchema(ctx, uiSchemaDefinition)\n          );\n          if (title !== undefined) {\n            return title;\n          }\n        }\n        const schemaDef = s.properties?.[discriminator];\n        if (schemaDef !== undefined && typeof schemaDef !== \"boolean\") {\n          // NOTE: I don't think it's worth adding a `value` dependency here\n          const { title } = retrieveSchema(ctx, schemaDef, undefined);\n          if (title !== undefined) {\n            return title;\n          }\n        }\n      }\n      const uiSchema = optionsUiSchemas[i];\n      return (\n        (uiSchema && uiTitleOption(ctx, uiSchema)) ??\n        s.title ??\n        enumOptionLabel(i)\n      );\n    });\n  });\n\n  const enumOptions = $derived<EnumOption<number>[]>(\n    optionTitles.map((label, i) => ({\n      id: createPseudoId(config.id, i, ctx),\n      label,\n      value: i,\n      disabled: false,\n    }))\n  );\n\n  const widgetConfig: Config = $derived.by(() => {\n    const suffix = combinationKey.toLowerCase() as Lowercase<\n      typeof combinationKey\n    >;\n    const uiSchema = retrieveUiSchema(\n      ctx,\n      config.uiSchema.combinationFieldOptionSelector\n    );\n    return {\n      id: createPseudoId(config.id, suffix, ctx),\n      title: uiTitleOption(ctx, uiSchema) ?? config.title,\n      schema: { type: \"integer\", default: 0 },\n      uiSchema,\n      required: true,\n    };\n  });\n  const errors = $derived(getErrors(ctx, config.id));\n\n  const combinationFieldConfig: Config | null = $derived.by(() => {\n    const selected = readableSelectedOption;\n    if (selected < 0) {\n      return null;\n    }\n    const schema = retrievedOptions[selected]!;\n    const { required } = config.schema;\n    const optionSchema = required\n      ? {\n          ...schema,\n          required: schema.required\n            ? required.concat(schema.required)\n            : required,\n        }\n      : schema;\n    const optionUiSchema =\n      selected < optionsUiSchemas.length\n        ? optionsUiSchemas[selected]!\n        : config.uiSchema;\n    return {\n      id: config.id,\n      title: \"\",\n      schema: optionSchema,\n      uiSchema: optionUiSchema,\n      required: config.required,\n    };\n  });\n\n  const CombinationField = $derived(\n    combinationFieldConfig && getFieldComponent(ctx, combinationFieldConfig)\n  );\n</script>\n\n{#if restFieldConfig}\n  <RestSchemaField\n    type=\"field\"\n    bind:value={value as undefined}\n    config={restFieldConfig}\n    uiOption={(opt) => retrieveUiOption(ctx, restFieldConfig, opt)}\n    translate={retrieveTranslate(ctx, restFieldConfig)}\n  />\n{/if}\n<Template type=\"template\" {config} {value} {errors} {uiOption}>\n  {#snippet optionSelector()}\n    <Widget\n      type=\"widget\"\n      {errors}\n      handlers={{}}\n      config={widgetConfig}\n      uiOption={(opt) => retrieveUiOption(ctx, widgetConfig, opt)}\n      options={enumOptions}\n      bind:value={\n        () => readableSelectedOption, (v) => (writableSelectedOption = v)\n      }\n    />\n  {/snippet}\n  {#if combinationFieldConfig}\n    <CombinationField\n      type=\"field\"\n      bind:value={value as undefined}\n      config={combinationFieldConfig}\n      uiOption={(opt) => retrieveUiOption(ctx, combinationFieldConfig, opt)}\n      translate={retrieveTranslate(ctx, combinationFieldConfig)}\n    />\n  {/if}\n</Template>\n", "const EMPTY = [];\nexport function createKeyedArray(array) {\n    let arrayRef = new WeakRef(EMPTY);\n    let lastKeys = EMPTY;\n    let lastKey = -1;\n    let changesPropagator = $state.raw(0);\n    const keys = $derived.by(() => {\n        const arr = array();\n        if (arrayRef.deref() === arr) {\n            return lastKeys;\n        }\n        arrayRef = new WeakRef(arr);\n        lastKeys = new Array(arr.length);\n        for (let i = 0; i < arr.length; i++) {\n            // NOTE: there is no `wrap-around` behavior\n            // But i think `Infinity` is unreachable here\n            lastKeys[i] = ++lastKey;\n        }\n        return lastKeys;\n    });\n    return {\n        key(index) {\n            changesPropagator;\n            return keys[index];\n        },\n        push(value) {\n            lastKeys.push(++lastKey);\n            array().push(value);\n        },\n        swap(a, b) {\n            const arr = array();\n            const key = lastKeys[a];\n            lastKeys[a] = lastKeys[b];\n            lastKeys[b] = key;\n            if (arr[a] === arr[b]) {\n                changesPropagator++;\n            }\n            else {\n                const tmp = arr[a];\n                arr[a] = arr[b];\n                arr[b] = tmp;\n            }\n        },\n        insert(index, value) {\n            lastKeys.splice(index, 0, ++lastKey);\n            array().splice(index, 0, value);\n        },\n        remove(index) {\n            lastKeys.splice(index, 1);\n            array().splice(index, 1);\n        },\n    };\n}\n", "export function titleWithIndex(title, index, fixedItemsCount) {\n    return index >= fixedItemsCount\n        ? `${title}-${index - fixedItemsCount + 1}`\n        : title;\n}\n", "import { getContext, setContext } from \"svelte\";\nimport { createKeyedArray } from \"../../lib/keyed-array.svelte.js\";\nimport { getDefaultValueForType, getSimpleSchemaType, isSchemaNullable, isSchemaObjectValue, } from \"../../core/index.js\";\nimport { AFTER_SUBMITTED, createChildId, getDefaultFieldState, getErrors, ON_ARRAY_CHANGE, retrieveSchema, retrieveUiOption, retrieveUiSchema, uiTitleOption, validateField, } from \"../../form/index.js\";\nimport { titleWithIndex } from \"./model.js\";\nconst ARRAY_CONTEXT = Symbol(\"array-context\");\nexport function getArrayContext() {\n    return getContext(ARRAY_CONTEXT);\n}\nexport function setArrayContext(ctx) {\n    setContext(ARRAY_CONTEXT, ctx);\n}\nfunction createItemsAPI(ctx, config, value, itemSchema) {\n    function validate() {\n        const m = ctx.fieldsValidationMode;\n        if (!(m & ON_ARRAY_CHANGE) || (m & AFTER_SUBMITTED && !ctx.isSubmitted)) {\n            return;\n        }\n        validateField(ctx, config(), value());\n    }\n    const uiOption = (opt) => retrieveUiOption(ctx, config(), opt);\n    const keyedArray = createKeyedArray(() => value() ?? []);\n    const errors = $derived(getErrors(ctx, config().id));\n    const addable = $derived(uiOption(\"addable\") ?? true);\n    const orderable = $derived(uiOption(\"orderable\") ?? true);\n    const removable = $derived(uiOption(\"removable\") ?? true);\n    const copyable = $derived(uiOption(\"copyable\") ?? false);\n    const itemTitle = $derived(uiOption(\"itemTitle\") ?? titleWithIndex);\n    return {\n        uiOption,\n        get itemTitle() {\n            return itemTitle;\n        },\n        get config() {\n            return config();\n        },\n        get addable() {\n            return addable;\n        },\n        get orderable() {\n            return orderable;\n        },\n        get removable() {\n            return removable;\n        },\n        get copyable() {\n            return copyable;\n        },\n        get errors() {\n            return errors;\n        },\n        key(index) {\n            return keyedArray.key(index);\n        },\n        pushItem() {\n            const schema = itemSchema();\n            if (schema === undefined) {\n                return;\n            }\n            keyedArray.push(getDefaultFieldState(ctx, schema, undefined) ??\n                getDefaultValueForType(getSimpleSchemaType(schema)));\n            validate();\n        },\n        moveItemUp(index) {\n            keyedArray.swap(index, index - 1);\n            validate();\n        },\n        moveItemDown(index) {\n            keyedArray.swap(index, index + 1);\n            validate();\n        },\n        copyItem(index) {\n            keyedArray.insert(index, $state.snapshot(value()[index]));\n            validate();\n        },\n        removeItem(index) {\n            keyedArray.remove(index);\n            validate();\n        },\n    };\n}\nfunction createCanAdd(config, value, addable) {\n    let val, maxItems;\n    return () => addable() &&\n        ((val = value()), Array.isArray(val)) &&\n        ((maxItems = config().schema.maxItems),\n            maxItems === undefined || val.length < maxItems);\n}\nexport function createArrayContext(ctx, config, value, \n// NOTE: It looks like the `undefined` value is always replaced by an array\n// when calculating default values, so this is unnecessary\n_) {\n    const itemSchema = $derived.by(() => {\n        const { schema: { items }, } = config();\n        return isSchemaObjectValue(items) ? items : {};\n    });\n    const api = createItemsAPI(ctx, config, value, () => itemSchema);\n    const itemUiSchema = $derived.by(() => {\n        const { uiSchema: { items }, } = config();\n        return retrieveUiSchema(ctx, !Array.isArray(items) ? items : undefined);\n    });\n    const itemUiTitle = $derived(uiTitleOption(ctx, itemUiSchema));\n    const canAdd = $derived.by(createCanAdd(config, value, () => api.addable));\n    return Object.assign(api, {\n        canAdd() {\n            return canAdd;\n        },\n        canCopy() {\n            return api.copyable && canAdd;\n        },\n        canRemove() {\n            return api.removable;\n        },\n        canMoveUp(index) {\n            return api.orderable && index > 0;\n        },\n        canMoveDown(index) {\n            return api.orderable && index < value().length - 1;\n        },\n        itemConfig(config, item, index) {\n            const schema = retrieveSchema(ctx, itemSchema, item);\n            return {\n                id: createChildId(config.id, index, ctx),\n                title: api.itemTitle(itemUiTitle ?? schema.title ?? config.title, index, 0),\n                schema,\n                uiSchema: itemUiSchema,\n                required: !isSchemaNullable(schema),\n            };\n        },\n    });\n}\nexport function createTupleContext(ctx, config, value, setValue) {\n    const itemsSchema = $derived.by(() => {\n        const { items } = config().schema;\n        return Array.isArray(items)\n            ? items.map((item, i) => {\n                if (typeof item === \"boolean\") {\n                    throw new Error(\"Invalid schema: items must be an array of schemas\");\n                }\n                return retrieveSchema(ctx, item, value()?.[i]);\n            })\n            : [];\n    });\n    const isAdditional = (index) => index >= itemsSchema.length;\n    $effect(() => {\n        const val = value();\n        if (val === undefined) {\n            setValue(new Array(itemsSchema.length));\n            return;\n        }\n        if (val.length < itemsSchema.length) {\n            val.push(...new Array(itemsSchema.length - value.length));\n        }\n    });\n    const schemaAdditionalItems = $derived.by(() => {\n        const { additionalItems } = config().schema;\n        return isSchemaObjectValue(additionalItems) ? additionalItems : undefined;\n    });\n    const api = createItemsAPI(ctx, config, value, () => schemaAdditionalItems);\n    const canAdd = $derived.by(createCanAdd(config, value, () => api.addable && schemaAdditionalItems !== undefined));\n    return Object.assign(api, {\n        canAdd() {\n            return canAdd;\n        },\n        canCopy(index) {\n            return api.copyable && canAdd && isAdditional(index);\n        },\n        canRemove(index) {\n            return api.removable && isAdditional(index);\n        },\n        canMoveUp(index) {\n            return api.orderable && index > itemsSchema.length;\n        },\n        canMoveDown(index) {\n            return (api.orderable && index < value().length - 1 && isAdditional(index));\n        },\n        itemConfig(config, item, index) {\n            const additional = isAdditional(index);\n            const schema = retrieveSchema(ctx, (additional ? schemaAdditionalItems : itemsSchema[index]), item);\n            const uiSchema = retrieveUiSchema(ctx, additional\n                ? config.uiSchema.additionalItems\n                : Array.isArray(config.uiSchema.items)\n                    ? config.uiSchema.items[index]\n                    : config.uiSchema.items);\n            return {\n                id: createChildId(config.id, index, ctx),\n                title: api.itemTitle(uiTitleOption(ctx, uiSchema) ?? schema.title ?? config.title, index, itemsSchema.length),\n                schema,\n                uiSchema,\n                required: !isSchemaNullable(schema),\n            };\n        },\n    });\n}\n", "<script lang=\"ts\">\n  import { isSchemaArrayValue, type SchemaArrayValue } from \"../../core/index.js\";\n  import {\n    getComponent,\n    getFormContext,\n    type ComponentProps,\n    Text,\n    type FormInternalContext,\n    type Validator,\n    type Config,\n    retrieveUiOption,\n    retrieveTranslate,\n  } from \"../../form/index.js\";\n\n  import { setArrayContext, type ArrayContext } from \"./context.svelte.js\";\n\n  let {\n    value = $bindable(),\n    config,\n    createArrayContext,\n    uiOption,\n    translate,\n  }: ComponentProps[\"arrayField\" | \"tupleField\"] & {\n    createArrayContext: <V extends Validator>(\n      ctx: FormInternalContext<V>,\n      config: () => Config,\n      value: () => SchemaArrayValue | undefined,\n      setValue: (v: SchemaArrayValue) => void\n    ) => ArrayContext<V>;\n  } = $props();\n\n  const ctx = getFormContext();\n  const arrayCtx = createArrayContext(\n    ctx,\n    () => config,\n    () => value,\n    (v) => (value = v)\n  );\n  setArrayContext(arrayCtx);\n\n  const ArrayItem = $derived(getComponent(ctx, \"arrayItemField\", config));\n  const Template = $derived(getComponent(ctx, \"arrayTemplate\", config));\n  const Button = $derived(getComponent(ctx, \"button\", config));\n</script>\n\n{#snippet addButton()}\n  <Button\n    errors={arrayCtx.errors}\n    {config}\n    disabled={false}\n    type=\"array-item-add\"\n    onclick={arrayCtx.pushItem}\n  >\n    <Text {config} id=\"add-array-item\" {translate} />\n  </Button>\n{/snippet}\n<Template\n  type=\"template\"\n  errors={arrayCtx.errors}\n  {config}\n  {value}\n  addButton={arrayCtx.canAdd() ? addButton : undefined}\n  {uiOption}\n>\n  {#if isSchemaArrayValue(value)}\n    {#each value as item, index (arrayCtx.key(index))}\n      {@const cfg = arrayCtx.itemConfig(config, item, index)}\n      <ArrayItem\n        type=\"field\"\n        {index}\n        config={cfg}\n        bind:value={value[index]}\n        uiOption={(opt) => retrieveUiOption(ctx, cfg, opt)}\n        translate={retrieveTranslate(ctx, cfg)}\n      />\n    {/each}\n  {/if}\n</Template>\n", "<script lang=\"ts\">\n  import type { ComponentProps } from \"../../form/index.js\";\n\n  import ArrayBase from \"./array-base.svelte\";\n  import { createArrayContext } from \"./context.svelte.js\";\n\n  let {\n    value = $bindable(),\n    config,\n    uiOption,\n    translate,\n  }: ComponentProps[\"arrayField\"] = $props();\n</script>\n\n<ArrayBase\n  type=\"field\"\n  bind:value\n  {config}\n  {uiOption}\n  {translate}\n  {createArrayContext}\n/>\n", "<script lang=\"ts\">\n  import type { ComponentProps } from \"../../form/index.js\";\n\n  import ArrayBase from \"./array-base.svelte\";\n  import { createTupleContext } from \"./context.svelte.js\";\n\n  let {\n    value = $bindable(),\n    config,\n    uiOption,\n    translate,\n  }: ComponentProps[\"tupleField\"] = $props();\n</script>\n\n<ArrayBase\n  type=\"field\"\n  bind:value\n  {config}\n  {uiOption}\n  {translate}\n  createArrayContext={createTupleContext}\n/>\n", "<script lang=\"ts\" module>\n  declare module \"../../form/index.js\" {\n    interface FoundationalComponents {\n      arrayItemField: {};\n    }\n    interface ComponentProps {\n      arrayItemField: FieldCommonProps<SchemaValue> & {\n        index: number;\n      };\n    }\n    interface ComponentBindings {\n      arrayItemField: \"value\";\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    getComponent,\n    getErrors,\n    getFieldComponent,\n    getFormContext,\n    Text,\n    type ComponentProps,\n    type FieldCommonProps,\n    type SchemaValue,\n  } from \"../../form/index.js\";\n\n  import { getArrayContext } from \"./context.svelte.js\";\n\n  let {\n    index,\n    value = $bindable(),\n    config,\n    uiOption,\n    translate,\n  }: ComponentProps[\"arrayItemField\"] = $props();\n\n  const ctx = getFormContext();\n  const arrayCtx = getArrayContext();\n\n  const Template = $derived(getComponent(ctx, \"arrayItemTemplate\", config));\n  const Field = $derived(getFieldComponent(ctx, config));\n  const Button = $derived(getComponent(ctx, \"button\", config));\n\n  const canCopy = $derived(arrayCtx.canCopy(index));\n  const canRemove = $derived(arrayCtx.canRemove(index));\n  const canMoveUp = $derived(arrayCtx.canMoveUp(index));\n  const canMoveDown = $derived(arrayCtx.canMoveDown(index));\n  const toolbar = $derived(canCopy || canRemove || canMoveUp || canMoveDown);\n  const errors = $derived(getErrors(ctx, config.id));\n</script>\n\n{#snippet buttons()}\n  {#if arrayCtx.orderable}\n    <Button\n      {errors}\n      {config}\n      type=\"array-item-move-up\"\n      disabled={!canMoveUp}\n      onclick={() => {\n        arrayCtx.moveItemUp(index);\n      }}\n    >\n      <Text {config} id=\"move-array-item-up\" {translate} />\n    </Button>\n    <Button\n      {errors}\n      {config}\n      disabled={!canMoveDown}\n      type=\"array-item-move-down\"\n      onclick={() => {\n        arrayCtx.moveItemDown(index);\n      }}\n    >\n      <Text {config} id=\"move-array-item-down\" {translate} />\n    </Button>\n  {/if}\n  {#if canCopy}\n    <Button\n      {errors}\n      {config}\n      type=\"array-item-copy\"\n      onclick={() => {\n        arrayCtx.copyItem(index);\n      }}\n      disabled={false}\n    >\n      <Text {config} id=\"copy-array-item\" {translate} />\n    </Button>\n  {/if}\n  {#if canRemove}\n    <Button\n      {errors}\n      {config}\n      disabled={false}\n      type=\"array-item-remove\"\n      onclick={() => {\n        arrayCtx.removeItem(index);\n      }}\n    >\n      <Text {config} id=\"remove-array-item\" {translate} />\n    </Button>\n  {/if}\n{/snippet}\n<Template\n  type=\"template\"\n  {index}\n  {value}\n  {config}\n  {errors}\n  buttons={toolbar ? buttons : undefined}\n  {uiOption}\n>\n  <Field\n    type=\"field\"\n    bind:value={value as undefined}\n    {config}\n    {uiOption}\n    {translate}\n  />\n</Template>\n", "import { ADDITIONAL_PROPERTY_FLAG, isSchema, } from \"../../core/index.js\";\nexport function generateNewKey(value, preferredKey, additionalPropertyKey) {\n    let index = 0;\n    let newKey;\n    do {\n        newKey = additionalPropertyKey(preferredKey, index++);\n    } while (newKey in value);\n    return newKey;\n}\nexport function createAdditionalPropertyKey(preferredKey, attempt) {\n    return attempt === 0 ? preferredKey : `${preferredKey}-${attempt}`;\n}\nexport function createOriginalKeysOrder(properties) {\n    const order = [];\n    const keys = Object.keys(properties);\n    for (const key of keys) {\n        const property = properties[key];\n        if (!isSchema(property) || ADDITIONAL_PROPERTY_FLAG in property) {\n            continue;\n        }\n        order.push(key);\n    }\n    if (order.length < keys.length) {\n        order.push(\"*\");\n    }\n    return order;\n}\n", "import { getContext, setContext, untrack } from \"svelte\";\nimport { getDefaultValueForType, getSimpleSchemaType, isAdditionalProperty, isSchemaDeepEqual, isSchemaExpandable, isSchemaObjectValue, orderProperties, } from \"../../core/index.js\";\nimport { AFTER_SUBMITTED, getDefaultFieldState, ON_OBJECT_CHANGE, validateField, validateAdditionalPropertyKey, retrieveSchema, getErrors, createChildId, retrieveUiSchema, retrieveUiOption, uiTitleOption, } from \"../../form/index.js\";\nimport { createAdditionalPropertyKey, generateNewKey, createOriginalKeysOrder, } from \"./model.js\";\nconst OBJECT_CONTEXT = Symbol(\"object-context\");\nexport function getObjectContext() {\n    return getContext(OBJECT_CONTEXT);\n}\nexport function setObjectContext(ctx) {\n    setContext(OBJECT_CONTEXT, ctx);\n}\nexport function createObjectContext(ctx, config, value, setValue, translate) {\n    // NOTE: This is required for computing a schema which will include all\n    // additional properties in the `properties` field with the\n    // `ADDITIONAL_PROPERTY_FLAG` flag and `dependencies` resolution.\n    const retrievedSchema = $derived(retrieveSchema(ctx, config().schema, value()));\n    let lastSchemaProperties = undefined;\n    const schemaProperties = $derived.by(() => {\n        if (!isSchemaDeepEqual(lastSchemaProperties, retrievedSchema.properties)) {\n            lastSchemaProperties = $state.snapshot(retrievedSchema.properties);\n        }\n        return lastSchemaProperties;\n    });\n    // NOTE: This code should populate `defaults` for properties from\n    // `dependencies` before new `fields` will populate their `defaults`.\n    $effect(() => {\n        schemaProperties;\n        setValue(untrack(() => getDefaultFieldState(ctx, retrievedSchema, value())));\n    });\n    const uiOption = (opt) => retrieveUiOption(ctx, config(), opt);\n    const schemaPropertiesOrder = $derived(isSchemaObjectValue(schemaProperties)\n        ? orderProperties(schemaProperties, uiOption(\"order\") ?? createOriginalKeysOrder(schemaProperties))\n        : []);\n    const requiredProperties = $derived(new Set(retrievedSchema.required));\n    const getAdditionalPropertySchema = $derived.by(() => {\n        const { additionalProperties, patternProperties } = retrievedSchema;\n        if (isSchemaObjectValue(additionalProperties)) {\n            return (val) => retrieveSchema(ctx, additionalProperties, val);\n        }\n        let patterns;\n        if (patternProperties === undefined ||\n            ((patterns = Object.keys(patternProperties)), patterns.length === 0)) {\n            return () => ({});\n        }\n        const pairs = patterns.map((pattern) => {\n            const property = patternProperties[pattern];\n            return [\n                new RegExp(pattern),\n                typeof property === \"boolean\" ? {} : property,\n            ];\n        });\n        return (val, key) => retrieveSchema(ctx, pairs.find(([p]) => p.test(key))?.[1] ?? pairs[0][1], val);\n    });\n    const canExpand = $derived(uiOption(\"expandable\") !== false &&\n        isSchemaExpandable(retrievedSchema, value()));\n    const errors = $derived(getErrors(ctx, config().id));\n    const newKeyPrefix = $derived(translate(\"additional-property\", {}));\n    function validate(val) {\n        const m = ctx.fieldsValidationMode;\n        if (!(m & ON_OBJECT_CHANGE) || (m & AFTER_SUBMITTED && !ctx.isSubmitted)) {\n            return;\n        }\n        validateField(ctx, config(), val);\n    }\n    const additionalPropertyKey = $derived(uiOption(\"additionalPropertyKey\") ?? createAdditionalPropertyKey);\n    return {\n        get errors() {\n            return errors;\n        },\n        get canExpand() {\n            return canExpand;\n        },\n        get propertiesOrder() {\n            return schemaPropertiesOrder;\n        },\n        isAdditionalProperty(property) {\n            return isAdditionalProperty(schemaProperties, property);\n        },\n        propertyConfig(config, property, isAdditional) {\n            const definition = schemaProperties[property] ?? false;\n            const schema = typeof definition === \"boolean\" ? {} : definition;\n            const uiSchema = retrieveUiSchema(ctx, isAdditional\n                ? config.uiSchema.additionalProperties\n                : config.uiSchema[property]);\n            return {\n                id: createChildId(config.id, property, ctx),\n                name: property,\n                title: uiTitleOption(ctx, uiSchema) ?? schema.title ?? property,\n                schema,\n                uiSchema,\n                required: requiredProperties.has(property),\n            };\n        },\n        addProperty() {\n            const val = value();\n            if (val === undefined) {\n                return;\n            }\n            const newKey = generateNewKey(val, newKeyPrefix, additionalPropertyKey);\n            const additionalPropertySchema = getAdditionalPropertySchema(val, newKey);\n            val[newKey] =\n                getDefaultFieldState(ctx, additionalPropertySchema, undefined) ??\n                    getDefaultValueForType(getSimpleSchemaType(additionalPropertySchema));\n            validate(val);\n        },\n        removeProperty(prop) {\n            const val = value();\n            if (val === undefined) {\n                return;\n            }\n            delete val[prop];\n            validate(val);\n        },\n        renameProperty(oldProp, newProp, fieldConfig) {\n            const val = value();\n            if (val === undefined) {\n                return;\n            }\n            const newKey = generateNewKey(val, newProp, additionalPropertyKey);\n            if (!validateAdditionalPropertyKey(ctx, config(), newKey, fieldConfig)) {\n                return;\n            }\n            val[newKey] = val[oldProp];\n            delete val[oldProp];\n            validate(val);\n        },\n    };\n}\n", "<script lang=\"ts\">\n  import { isSchemaObjectValue } from \"../../core/value.js\";\n  import {\n    Text,\n    getComponent,\n    getFormContext,\n    retrieveTranslate,\n    retrieveUiOption,\n    type ComponentProps,\n  } from \"../../form/index.js\";\n\n  import { createObjectContext, setObjectContext } from \"./context.svelte.js\";\n\n  const ctx = getFormContext();\n\n  let {\n    config,\n    value = $bindable(),\n    uiOption,\n    translate,\n  }: ComponentProps[\"objectField\"] = $props();\n\n  const objCtx = createObjectContext(\n    ctx,\n    () => config,\n    () => value,\n    (v) => (value = v),\n    translate,\n  );\n  setObjectContext(objCtx);\n\n  const ObjectProperty = $derived(\n    getComponent(ctx, \"objectPropertyField\", config)\n  );\n  const Template = $derived(getComponent(ctx, \"objectTemplate\", config));\n  const Button = $derived(getComponent(ctx, \"button\", config));\n</script>\n\n{#snippet addButton()}\n  <Button\n    type=\"object-property-add\"\n    {config}\n    errors={objCtx.errors}\n    disabled={false}\n    onclick={objCtx.addProperty}\n  >\n    <Text {config} id=\"add-object-property\" {translate} />\n  </Button>\n{/snippet}\n<Template\n  type=\"template\"\n  {value}\n  {config}\n  errors={objCtx.errors}\n  addButton={objCtx.canExpand ? addButton : undefined}\n  {uiOption}\n>\n  {#if isSchemaObjectValue(value)}\n    {#each objCtx.propertiesOrder as property (property)}\n      {@const isAdditional = objCtx.isAdditionalProperty(property)}\n      {@const cfg = objCtx.propertyConfig(config, property, isAdditional)}\n      <ObjectProperty\n        type=\"field\"\n        {property}\n        {isAdditional}\n        bind:value={value[property]}\n        config={cfg}\n        uiOption={(opt) => retrieveUiOption(ctx, cfg, opt)}\n        translate={retrieveTranslate(ctx, cfg)}\n      />\n    {/each}\n  {/if}\n</Template>\n", "<script lang=\"ts\">\n  import {\n    type UiSchema,\n    type Config,\n    getErrors,\n    getFormContext,\n    createPseudoId,\n    getComponent,\n    type Id,\n    type UiOption,\n    retrieveUiOption,\n    uiTitleOption,\n    type Translate,\n  } from \"../../form/index.js\";\n\n  import { getObjectContext } from \"./context.svelte.js\";\n\n  const {\n    parentId,\n    property,\n    uiSchema,\n    translate,\n  }: {\n    parentId: Id;\n    property: string;\n    uiSchema: UiSchema;\n    translate: Translate;\n  } = $props();\n\n  const ctx = getFormContext();\n  const objCtx = getObjectContext();\n\n  const id = $derived(createPseudoId(parentId, \"key-input\", ctx));\n  const config: Config = $derived({\n    id,\n    name: id,\n    title:\n      uiTitleOption(ctx, uiSchema) ??\n      translate(\"key-input-title\", { name: property }),\n    schema: { type: \"string\" },\n    uiSchema,\n    required: true,\n  });\n\n  const Template = $derived(getComponent(ctx, \"fieldTemplate\", config));\n  const widgetType = \"textWidget\";\n  const Widget = $derived(getComponent(ctx, widgetType, config));\n\n  let key = $derived<string | undefined>(property);\n\n  const handlers = {\n    onblur: () => {\n      if (key === undefined || key === property) {\n        return;\n      }\n      objCtx.renameProperty(property, key, config);\n    },\n  };\n\n  const errors = $derived(getErrors(ctx, id));\n  const uiOption: UiOption = (opt) => retrieveUiOption(ctx, config, opt);\n</script>\n\n<Template\n  type=\"template\"\n  showTitle\n  useLabel\n  {widgetType}\n  value={property}\n  {config}\n  {errors}\n  {uiOption}\n>\n  <Widget\n    type=\"widget\"\n    {errors}\n    {handlers}\n    {config}\n    {uiOption}\n    bind:value={key}\n  />\n</Template>\n", "<script lang=\"ts\" module>\n  declare module \"../../form/index.js\" {\n    interface FoundationalComponents {\n      objectPropertyField: {};\n    }\n    interface ComponentProps {\n      objectPropertyField: FieldCommonProps<SchemaValue> & {\n        property: string;\n        isAdditional: boolean;\n      };\n    }\n    interface ComponentBindings {\n      objectPropertyField: \"value\";\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    getComponent,\n    getErrors,\n    getFieldComponent,\n    getFormContext,\n    retrieveUiSchema,\n    Text,\n    type ComponentProps,\n    type FieldCommonProps,\n    type SchemaValue,\n  } from \"../../form/index.js\";\n\n  import { getObjectContext } from \"./context.svelte.js\";\n  import ObjectKeyInput from \"./object-key-input.svelte\";\n\n  let {\n    config,\n    property,\n    isAdditional,\n    value = $bindable(),\n    uiOption,\n    translate,\n  }: ComponentProps[\"objectPropertyField\"] = $props();\n\n  const ctx = getFormContext();\n  const objCtx = getObjectContext();\n\n  const Template = $derived(\n    getComponent(ctx, \"objectPropertyTemplate\", config)\n  );\n  const Field = $derived(getFieldComponent(ctx, config));\n  const Button = $derived(getComponent(ctx, \"button\", config));\n  const errors = $derived(getErrors(ctx, config.id));\n</script>\n\n{#snippet keyInput()}\n  <ObjectKeyInput\n    {translate}\n    {property}\n    parentId={config.id}\n    uiSchema={retrieveUiSchema(ctx, config.uiSchema.additionalPropertyKeyInput)}\n  />\n{/snippet}\n{#snippet removeButton()}\n  <Button\n    {errors}\n    {config}\n    type=\"object-property-remove\"\n    disabled={false}\n    onclick={() => {\n      objCtx.removeProperty(property);\n    }}\n  >\n    <Text {config} id=\"remove-object-property\" {translate} />\n  </Button>\n{/snippet}\n<Template\n  type=\"template\"\n  {property}\n  {value}\n  {config}\n  {errors}\n  keyInput={isAdditional ? keyInput : undefined}\n  removeButton={isAdditional ? removeButton : undefined}\n  {uiOption}\n>\n  <Field\n    type=\"field\"\n    bind:value={value as undefined}\n    {config}\n    {uiOption}\n    {translate}\n  />\n</Template>\n", "<script\n  lang=\"ts\"\n  generics=\"V extends FieldValue, T extends FoundationalWidgetType\"\n>\n  import {\n    makeEventHandlers,\n    getErrors,\n    validateField,\n    getFormContext,\n    getComponent,\n    type ComponentProps,\n    type Config,\n    type FieldValue,\n    type UiOption,\n  } from \"../form/index.js\";\n\n  import type { FoundationalWidgetType } from \"./widgets.js\";\n\n  const ctx = getFormContext();\n\n  let {\n    value = $bindable(),\n    config,\n    uiOption,\n    fromValue,\n    toValue,\n    widgetType,\n    showTitle,\n    useLabel,\n  }: {\n    config: Config;\n    uiOption: UiOption;\n    value: V;\n    widgetType: T;\n    fromValue: (v: V) => ComponentProps[T][\"value\"];\n    toValue: (v: ComponentProps[T][\"value\"]) => V;\n    showTitle: boolean;\n    useLabel: boolean;\n  } = $props();\n\n  const Template = $derived(getComponent(ctx, \"fieldTemplate\", config));\n  const Widget = $derived(getComponent(ctx, widgetType, config));\n\n  const handlers = makeEventHandlers(ctx, () =>\n    validateField(ctx, config, value)\n  );\n\n  const errors = $derived(getErrors(ctx, config.id));\n</script>\n\n<Template\n  type=\"template\"\n  {showTitle}\n  {useLabel}\n  {widgetType}\n  {uiOption}\n  {value}\n  {config}\n  {errors}\n>\n  <Widget\n    type=\"widget\"\n    {config}\n    {errors}\n    {uiOption}\n    bind:value={\n      () => fromValue(value) as undefined, (v) => (value = toValue(v))\n    }\n    {handlers}\n  />\n</Template>\n", "<script lang=\"ts\">\n  import { identity } from \"../lib/function.js\";\n  import type { ComponentProps } from \"../form/index.js\";\n\n  import FieldBase from \"./field-base.svelte\";\n\n  let {\n    config,\n    value = $bindable(),\n    uiOption,\n  }: ComponentProps[\"booleanField\"] = $props();\n</script>\n\n<FieldBase\n  {config}\n  {uiOption}\n  bind:value\n  widgetType=\"checkboxWidget\"\n  showTitle={uiOption(\"hideTitle\") === false}\n  useLabel\n  fromValue={identity}\n  toValue={identity}\n/>\n", "<script lang=\"ts\" module>\n  declare module \"../form/index.js\" {\n    interface UiOptions {\n      numberEmptyValue?: number;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import { identity } from \"../lib/function.js\";\n  import type { ComponentProps } from \"../form/index.js\";\n\n  import FieldBase from \"./field-base.svelte\";\n\n  let { value = $bindable(), config, uiOption }: ComponentProps[\"integerField\"] =\n    $props();\n</script>\n\n<FieldBase\n  {config}\n  {uiOption}\n  showTitle\n  useLabel\n  widgetType=\"numberWidget\"\n  bind:value={\n    () => value,\n    (v) => {\n      if (Number.isInteger(v)) {\n        value = v;\n      } else if (v === undefined) {\n        value = uiOption('numberEmptyValue');\n      }\n    }\n  }\n  fromValue={identity}\n  toValue={identity}\n/>\n", "<script lang=\"ts\">\n  import {\n    getComponent,\n    getErrors,\n    getFormContext,\n    type ComponentProps,\n  } from \"../form/index.js\";\n\n  let { value = $bindable(), config, uiOption }: ComponentProps[\"nullField\"] = $props();\n\n  $effect(() => {\n    if (value === undefined) {\n      value = null;\n    }\n  });\n\n  const ctx = getFormContext();\n\n  const Template = $derived(getComponent(ctx, \"fieldTemplate\", config));\n\n  const errors = $derived(getErrors(ctx, config.id));\n</script>\n\n<Template\n  type=\"template\"\n  showTitle\n  useLabel={false}\n  widgetType=\"nullField\"\n  {uiOption}\n  {errors}\n  {value}\n  {config}\n>\n  {null}\n</Template>\n", "<script lang=\"ts\" module>\n  declare module \"../form/index.js\" {\n    interface UiOptions {\n      numberEmptyValue?: number;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import { identity } from \"../lib/function.js\";\n  import type { ComponentProps } from \"../form/index.js\";\n\n  import FieldBase from \"./field-base.svelte\";\n\n  let { value = $bindable(), config, uiOption }: ComponentProps[\"numberField\"] = $props();\n</script>\n\n<FieldBase\n  {config}\n  {uiOption}\n  showTitle\n  useLabel\n  widgetType=\"numberWidget\"\n  bind:value\n  fromValue={identity}\n  toValue={(v) => v ?? uiOption('numberEmptyValue')}\n/>\n", "<script lang=\"ts\" module>\n  declare module \"../form/index.js\" {\n    interface UiOptions {\n      stringEmptyValue?: string;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import { identity } from \"../lib/function.js\";\n  import type { ComponentProps } from \"../form/index.js\";\n\n  import FieldBase from \"./field-base.svelte\";\n\n  let {\n    config,\n    value = $bindable(),\n    uiOption,\n  }: ComponentProps[\"stringField\"] = $props();\n</script>\n\n<FieldBase\n  {config}\n  {uiOption}\n  showTitle\n  useLabel\n  widgetType=\"textWidget\"\n  bind:value\n  fromValue={identity}\n  toValue={(v) => v || uiOption(\"stringEmptyValue\")}\n/>\n", "<script lang=\"ts\">\n  import { ANY_OF_KEY } from \"../core/index.js\";\n  import type { ComponentProps } from \"../form/index.js\";\n\n  import Combination from \"./combination.svelte\";\n\n  let {\n    value = $bindable(),\n    config,\n    uiOption,\n    translate,\n  }: ComponentProps[\"anyOfField\"] = $props();\n</script>\n\n<Combination\n  type=\"field\"\n  bind:value\n  {config}\n  {uiOption}\n  {translate}\n  combinationKey={ANY_OF_KEY}\n/>\n", "<script lang=\"ts\">\n  import { ONE_OF_KEY } from \"../core/index.js\";\n  import type { ComponentProps } from \"../form/index.js\";\n\n  import Combination from \"./combination.svelte\";\n\n  let {\n    config,\n    uiOption,\n    value = $bindable(),\n    translate,\n  }: ComponentProps[\"oneOfField\"] = $props();\n</script>\n\n<Combination\n  type=\"field\"\n  bind:value\n  {config}\n  {uiOption}\n  {translate}\n  combinationKey={ONE_OF_KEY}\n/>\n", "import * as fields from \"../exports.js\";\nexport const definitions = Object.assign({}, fields);\n"],
  "mappings": "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",
  "names": ["config", "$$anchor", "config", "prop", "$$anchor"]
}
