{
  "version": 3,
  "sources": ["../../@sjsf/form/dist/templates/exports.js", "../../@sjsf/form/dist/templates/get-template-props.js", "../../@sjsf/form/dist/templates/field-template.svelte", "../../@sjsf/form/dist/templates/object-template.svelte", "../../@sjsf/form/dist/templates/object-property-template.svelte", "../../@sjsf/form/dist/templates/array-template.svelte", "../../@sjsf/form/dist/templates/array-item-template.svelte", "../../@sjsf/form/dist/templates/multi-field-template.svelte", "../../@sjsf/basic-theme/dist/components/submit-button.svelte", "../../@sjsf/basic-theme/dist/components/button.svelte", "../../@sjsf/basic-theme/dist/components/layout.svelte", "../../@sjsf/basic-theme/dist/components/title.svelte", "../../@sjsf/basic-theme/dist/components/label.svelte", "../../@sjsf/basic-theme/dist/components/description.svelte", "../../@sjsf/basic-theme/dist/components/help.svelte", "../../@sjsf/basic-theme/dist/components/errors-list.svelte", "../../@sjsf/basic-theme/dist/widgets/text.svelte", "../../@sjsf/basic-theme/dist/widgets/number.svelte", "../../@sjsf/form/dist/options.svelte.js", "../../@sjsf/basic-theme/dist/widgets/select.svelte", "../../@sjsf/basic-theme/dist/widgets/checkbox.svelte"],
  "sourcesContent": ["export { default as fieldTemplate } from \"./field-template.svelte\";\nexport { default as objectTemplate } from \"./object-template.svelte\";\nexport { default as objectPropertyTemplate } from \"./object-property-template.svelte\";\nexport { default as arrayTemplate } from \"./array-template.svelte\";\nexport { default as arrayItemTemplate } from \"./array-item-template.svelte\";\nexport { default as multiFieldTemplate } from \"./multi-field-template.svelte\";\n", "export function getTemplateProps(uiOption, config) {\n    return {\n        title: config.title,\n        showMeta: uiOption(\"hideTitle\") !== true,\n        description: uiOption(\"description\") ?? config.schema.description,\n    };\n}\n", "<script lang=\"ts\">\n  import {\n    getComponent,\n    getFormContext,\n    type ComponentProps,\n  } from \"../form/index.js\";\n\n  import { getTemplateProps } from \"./get-template-props.js\";\n\n  const {\n    children,\n    config,\n    uiOption,\n    showTitle,\n    useLabel,\n    errors,\n  }: ComponentProps[\"fieldTemplate\"] = $props();\n\n  const ctx = getFormContext();\n\n  const Layout = $derived(getComponent(ctx, \"layout\", config));\n  const TitleOrLabel = $derived(\n    getComponent(\n      ctx,\n      (uiOption(\"useLabel\") ?? useLabel) ? \"label\" : \"title\",\n      config\n    )\n  );\n  const Description = $derived(getComponent(ctx, \"description\", config));\n  const ErrorsList = $derived(getComponent(ctx, \"errorsList\", config));\n  const Help = $derived(getComponent(ctx, \"help\", config));\n\n  const { title, description, showMeta } = $derived(\n    getTemplateProps(uiOption, config)\n  );\n  const help = $derived(uiOption(\"help\"));\n</script>\n\n<Layout type=\"field\" {config} {errors}>\n  {#if showMeta && ((showTitle && title) || description)}\n    <Layout type=\"field-meta\" {config} {errors}>\n      {#if showTitle && title}\n        <TitleOrLabel type=\"field\" {title} {config} {errors} />\n      {/if}\n      {#if description}\n        <Description type=\"field\" {description} {config} {errors} />\n      {/if}\n    </Layout>\n  {/if}\n  <Layout type=\"field-content\" {config} {errors}>\n    {@render children()}\n  </Layout>\n  {#if errors.length > 0}\n    <ErrorsList {errors} {config} />\n  {/if}\n  {#if help !== undefined}\n    <Help {help} {config} {errors} />\n  {/if}\n</Layout>\n", "<script lang=\"ts\">\n  import {\n    getComponent,\n    getFormContext,\n    type ComponentProps,\n  } from \"../form/index.js\";\n\n  import { getTemplateProps } from \"./get-template-props.js\";\n\n  const ctx = getFormContext();\n\n  const {\n    config,\n    children,\n    addButton,\n    errors,\n    uiOption,\n  }: ComponentProps[\"objectTemplate\"] = $props();\n\n  const Layout = $derived(getComponent(ctx, \"layout\", config));\n  const Title = $derived(getComponent(ctx, \"title\", config));\n  const Description = $derived(getComponent(ctx, \"description\", config));\n  const ErrorsList = $derived(getComponent(ctx, \"errorsList\", config));\n\n  const { title, description, showMeta } = $derived(getTemplateProps(uiOption, config));\n</script>\n\n<Layout type=\"object-field\" {config} {errors}>\n  {#if showMeta && (title || description)}\n    <Layout type=\"object-field-meta\" {config} {errors}>\n      {#if title}\n        <Title\n          type=\"object\"\n          {config}\n          {title}\n          {errors}\n        />\n      {/if}\n      {#if description}\n        <Description type=\"object\" {description} {config} {errors} />\n      {/if}\n    </Layout>\n  {/if}\n  <Layout type=\"object-properties\" {config} {errors}>\n    {@render children()}\n  </Layout>\n  {@render addButton?.()}\n  {#if errors.length > 0}\n    <ErrorsList {errors} {config} />\n  {/if}\n</Layout>\n", "<script lang=\"ts\">\n  import {\n    getComponent,\n    getFormContext,\n    type ComponentProps,\n  } from \"../form/index.js\";\n\n  const {\n    children,\n    keyInput,\n    removeButton,\n    config,\n    errors,\n  }: ComponentProps[\"objectPropertyTemplate\"] = $props();\n\n  const ctx = getFormContext();\n\n  const Layout = $derived(getComponent(ctx, \"layout\", config));\n</script>\n\n<Layout type=\"object-property\" {config} {errors}>\n  {#if keyInput}\n    <Layout type=\"object-property-key-input\" {config} {errors}>\n      {@render keyInput()}\n    </Layout>\n  {/if}\n  <Layout type=\"object-property-content\" {config} {errors}>\n    {@render children()}\n  </Layout>\n  {#if removeButton}\n    <Layout type=\"object-property-controls\" {config} {errors}>\n      {@render removeButton()}\n    </Layout>\n  {/if}\n</Layout>\n", "<script lang=\"ts\">\n  import {\n    getComponent,\n    getFormContext,\n    type ComponentProps,\n  } from \"../form/index.js\";\n\n  import { getTemplateProps } from \"./get-template-props.js\";\n\n  const ctx = getFormContext();\n\n  const {\n    children,\n    addButton,\n    uiOption,\n    config,\n    errors,\n  }: ComponentProps[\"arrayTemplate\"] = $props();\n\n  const Layout = $derived(getComponent(ctx, \"layout\", config));\n  const Title = $derived(getComponent(ctx, \"title\", config));\n  const Description = $derived(getComponent(ctx, \"description\", config));\n  const ErrorsList = $derived(getComponent(ctx, \"errorsList\", config));\n\n  const { title, description, showMeta } = $derived(getTemplateProps(uiOption, config));\n</script>\n\n<Layout type=\"array-field\" {config} {errors}>\n  {#if showMeta && (title || description)}\n    <Layout type=\"array-field-meta\" {config} {errors}>\n      {#if title}\n        <Title\n          type=\"array\"\n          {title}\n          {config}\n          {errors}\n        />\n      {/if}\n      {#if description}\n        <Description type=\"array\" {description} {config} {errors} />\n      {/if}\n    </Layout>\n  {/if}\n  <Layout type=\"array-items\" {config} {errors}>\n    {@render children()}\n  </Layout>\n  {@render addButton?.()}\n  {#if errors.length > 0}\n    <ErrorsList {errors} {config} />\n  {/if}\n</Layout>\n", "<script lang=\"ts\">\n  import {\n    getComponent,\n    getFormContext,\n    type ComponentProps,\n  } from \"../form/index.js\";\n\n  const {\n    children,\n    buttons,\n    config,\n    errors,\n  }: ComponentProps[\"arrayItemTemplate\"] = $props();\n\n  const ctx = getFormContext();\n\n  const Layout = $derived(getComponent(ctx, \"layout\", config));\n</script>\n\n<Layout type=\"array-item\" {config} {errors}>\n  <Layout type=\"array-item-content\" {config} {errors}>\n    {@render children()}\n  </Layout>\n  {#if buttons}\n    <Layout type=\"array-item-controls\" {config} {errors}>\n      {@render buttons()}\n    </Layout>\n  {/if}\n</Layout>\n", "<script lang=\"ts\">\n  import {\n    getComponent,\n    getFormContext,\n    type ComponentProps,\n  } from \"../form/index.js\";\n\n  const {\n    children,\n    optionSelector,\n    config,\n    errors,\n  }: ComponentProps[\"multiFieldTemplate\"] = $props();\n\n  const ctx = getFormContext();\n\n  const Layout = $derived(getComponent(ctx, \"layout\", config));\n</script>\n\n<Layout type=\"multi-field\" {config} {errors}>\n  <Layout type=\"multi-field-controls\" {config} {errors}>\n    {@render optionSelector()}\n  </Layout>\n  <Layout type=\"multi-field-content\" {config} {errors}>\n    {@render children()}\n  </Layout>\n</Layout>\n", "<script lang=\"ts\" module>\n  import type { HTMLButtonAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      submitButton?: HTMLButtonAttributes;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    buttonAttributes,\n    getFormContext,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  const { children, config }: ComponentProps[\"submitButton\"] = $props();\n\n  const ctx = getFormContext();\n</script>\n\n<button\n  {...buttonAttributes(ctx, config, \"submitButton\", \"submit\", {\n    style: \"width: 100%; padding: 0.5rem;\",\n  })}\n>\n  {@render children()}\n</button>\n", "<script lang=\"ts\" module>\n  import type { HTMLButtonAttributes } from \"svelte/elements\";\n\n  import type { ButtonType } from \"@sjsf/form/fields/components\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      /**\n       * Overrides the attributes of any button component.\n       */\n      button?: HTMLButtonAttributes;\n      /**\n       * Overrides the attributes of a button with a specific type.\n       * This override takes precedence over the `button` override, but does not replace it.\n       */\n      buttons?: {\n        [B in ButtonType]?: HTMLButtonAttributes;\n      };\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    composeProps,\n    disabledProp,\n    getFormContext,\n    uiOptionProps,\n    uiOptionNestedProps,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  const {\n    children,\n    type,\n    onclick,\n    config,\n    disabled,\n  }: ComponentProps[\"button\"] = $props();\n\n  const ctx = getFormContext();\n\n  function getStyle(type: ButtonType) {\n    switch (type) {\n      case \"object-property-add\":\n      case \"array-item-add\":\n        return \"width: 100%; padding: 0.25rem\";\n      default:\n        return undefined;\n    }\n  }\n</script>\n\n<button\n  {...composeProps(\n    ctx,\n    config,\n    {\n      disabled,\n      type: \"button\",\n      style: getStyle(type),\n      onclick,\n    } satisfies HTMLButtonAttributes,\n    uiOptionProps(\"button\"),\n    uiOptionNestedProps(\"buttons\", (p) => p[type]),\n    disabledProp\n  )}\n>\n  {@render children()}\n</button>\n", "<script lang=\"ts\" module>\n  import type { HTMLAttributes } from \"svelte/elements\";\n\n  import type { LayoutType } from \"@sjsf/form/fields/components\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      /**\n       * Overrides the attributes of any layout component.\n       */\n      layout?: HTMLAttributes<HTMLDivElement>;\n      /**\n       * Overrides the attributes of a layout with a specific type.\n       * This override takes precedence over the `layout` override, but does not replace it.\n       */\n      layouts?: {\n        [L in LayoutType]?: HTMLAttributes<HTMLDivElement>;\n      };\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    getFormContext,\n    layoutAttributes,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  const { type, children, config }: ComponentProps[\"layout\"] = $props();\n\n  function getStyle(type: LayoutType) {\n    switch (type) {\n      case \"object-property\":\n        return \"display: grid; grid-template-rows: 1fr; align-items: start; column-gap: 0.2rem;\";\n      case \"array-item\":\n      case \"array-item-controls\":\n        return \"display: flex; gap: 0.2rem; align-items: start;\";\n      case \"array-item-content\":\n        return \"flex-grow: 1;\";\n      case \"field-content\":\n        return \"display: flex; gap: 0.5rem; flex-wrap: wrap;\";\n      case \"array-items\":\n      case \"object-properties\":\n      case \"array-field\":\n      case \"object-field\":\n      case \"multi-field\":\n        return \"display: flex; flex-direction: column; gap: 1rem;\";\n      case \"field\":\n        return \"display: flex; flex-direction: column; gap: 0.2rem;\";\n      case \"field-meta\":\n        return \"display: block;\";\n      case \"object-property-key-input\":\n      case \"object-property-content\":\n        return \"flex-grow: 1;\";\n      // case \"object-property-controls\":\n      // return \"align-self: flex-start;\";\n      case \"object-field-meta\":\n      case \"array-field-meta\":\n        return \"padding-bottom: 0;\";\n      default:\n        return undefined;\n    }\n  }\n\n  const style = $derived(getStyle(type));\n\n  const ctx = getFormContext();\n\n  const attributes = $derived(\n    layoutAttributes(ctx, config, \"layout\", \"layouts\", type, {})!\n  );\n</script>\n\n{#if style || Object.keys(attributes).length > 1}\n  <div {style} {...attributes}>\n    {@render children()}\n  </div>\n{:else}\n  {@render children()}\n{/if}\n\n<style>\n  [data-layout=\"object-property\"] {\n    grid-template-columns: 1fr;\n  }\n  :global([data-layout=\"object-property\"]:has(> :nth-child(2))) {\n    grid-template-columns: 1fr 1fr auto;\n  }\n</style>\n", "<script lang=\"ts\" module>\n  import type { HTMLAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      /**\n       * Overrides the attributes of the field title\n       */\n      titleAttributes?: HTMLAttributes<HTMLDivElement>;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    getFormContext,\n    titleAttributes,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  const { title, config, type }: ComponentProps[\"title\"] = $props();\n\n  const ctx = getFormContext();\n</script>\n\n<legend\n  {...titleAttributes(ctx, config, \"titleAttributes\", {\n    style: `font-weight: bold; font-size: ${type === \"field\" ? \"unset\" : \"larger\"};`,\n  })}\n>\n  {title}\n</legend>\n", "<script lang=\"ts\" module>\n  import type { HTMLLabelAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      /**\n       * Overrides the attributes of the field label.\n       */\n      labelAttributes?: HTMLLabelAttributes;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    type ComponentProps,\n    getFormContext,\n    labelAttributes,\n  } from \"@sjsf/form\";\n\n  const { title, config }: ComponentProps[\"label\"] = $props();\n\n  const ctx = getFormContext();\n</script>\n\n<label\n  {...labelAttributes(ctx, config, \"labelAttributes\", {\n    style: \"font-weight: bold;\",\n  })}\n>\n  {title}\n  {#if config.required}\n    <span>*</span>\n  {/if}\n</label>\n", "<script lang=\"ts\" module>\n  import type { HTMLAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      /**\n       * Overrides the attributes of the description.\n       */\n      descriptionAttributes?: HTMLAttributes<HTMLDivElement>;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    descriptionAttributes,\n    getFormContext,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  const { description, config }: ComponentProps[\"description\"] = $props();\n\n  const ctx = getFormContext();\n</script>\n\n<div\n  {...descriptionAttributes(ctx, config, \"descriptionAttributes\", {\n    style: \"font-weight: 300;\",\n  })}\n>\n  {description}\n</div>\n", "<script lang=\"ts\" module>\n  import type { HTMLAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      /**\n       * Overrides the attributes of the help.\n       */\n      helpAttributes?: HTMLAttributes<HTMLDivElement>;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    getFormContext,\n    helpAttributes,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  const { help, config }: ComponentProps[\"help\"] = $props();\n\n  const ctx = getFormContext();\n</script>\n\n<div\n  {...helpAttributes(ctx, config, \"helpAttributes\", {\n    style: \"font-weight: 300;\",\n  })}\n>\n  {help}\n</div>\n", "<script lang=\"ts\" module>\n  import type { HTMLAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      /**\n       * Overrides the attributes of the errors list.\n       */\n      errorsList?: HTMLAttributes<HTMLUListElement>;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    errorsListAttributes,\n    getFormContext,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  const { errors, config }: ComponentProps[\"errorsList\"] = $props();\n\n  const ctx = getFormContext();\n</script>\n\n<ul\n  {...errorsListAttributes(ctx, config, \"errorsList\", {\n    style: \"color: red; list-style-position: inside; padding: 0; margin: 0;\",\n  })}\n>\n  {#each errors as err}\n    <li>{err.message}</li>\n  {/each}\n</ul>\n", "<script lang=\"ts\" module>\n  import type { HTMLInputAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      text?: HTMLInputAttributes;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    Datalist,\n    getFormContext,\n    inputAttributes,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  let {\n    value = $bindable(),\n    config,\n    handlers,\n  }: ComponentProps[\"textWidget\"] = $props();\n\n  const ctx = getFormContext();\n\n  const attributes = $derived(\n    inputAttributes(ctx, config, \"text\", handlers, {\n      style: \"flex-grow: 1\",\n      type: \"text\",\n    })\n  );\n</script>\n\n<input bind:value {...attributes} />\n<Datalist id={attributes.list} {config} />\n", "<script lang=\"ts\" module>\n  import type { HTMLInputAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      number?: HTMLInputAttributes;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    Datalist,\n    getFormContext,\n    inputAttributes,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  let {\n    value = $bindable(),\n    config,\n    handlers,\n  }: ComponentProps[\"numberWidget\"] = $props();\n\n  const ctx = getFormContext();\n\n  const attributes = $derived(\n    inputAttributes(ctx, config, \"number\", handlers, {\n      type: \"number\",\n      style: \"flex-grow: 1\",\n    })\n  );\n</script>\n\n<input\n  bind:value={() => value ?? null, (v) => (value = v ?? undefined)}\n  {...attributes}\n/>\n<Datalist id={attributes.list} {config} />\n", "import { isObject } from \"./lib/object.js\";\nimport { isSchemaValueDeepEqual, } from \"./core/index.js\";\nexport function indexMapper(options) {\n    const map = new Map(options.map((option, index) => [option.value, index]));\n    return {\n        fromValue(value) {\n            if (value === undefined) {\n                return -1;\n            }\n            const index = map.get(value);\n            if (index !== undefined) {\n                return index;\n            }\n            if (!isObject(value)) {\n                return options.findIndex((option) => option.value === value);\n            }\n            return options.findIndex((option) => isSchemaValueDeepEqual(option.value, value));\n        },\n        toValue(index) {\n            return options[index]?.value;\n        },\n    };\n}\nexport function stringIndexMapper(options) {\n    const { fromValue, toValue } = indexMapper(options);\n    return {\n        fromValue(value) {\n            return String(fromValue(value));\n        },\n        toValue(value) {\n            return toValue(Number(value));\n        },\n    };\n}\nexport function singleOption({ mapper, value, update, }) {\n    const { fromValue, toValue } = $derived(mapper());\n    const val = $derived(fromValue(value()));\n    return {\n        get value() {\n            return val;\n        },\n        set value(v) {\n            update(toValue(v));\n        },\n    };\n}\nexport function multipleOptions({ mapper, value, update, }) {\n    const { fromValue, toValue } = $derived(mapper());\n    const val = $derived(value()?.map(fromValue) ?? []);\n    return {\n        get value() {\n            return val;\n        },\n        set value(v) {\n            update(v.map(toValue));\n        },\n    };\n}\n", "<script lang=\"ts\" module>\n  import type { HTMLSelectAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      select?: HTMLSelectAttributes;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    getFormContext,\n    selectAttributes,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n  import { indexMapper, singleOption } from \"@sjsf/form/options.svelte\";\n\n  let {\n    handlers,\n    value = $bindable(),\n    options,\n    config,\n  }: ComponentProps[\"selectWidget\"] = $props();\n\n  const ctx = getFormContext();\n\n  const attributes = $derived(\n    selectAttributes(ctx, config, \"select\", handlers, {\n      style: \"flex-grow: 1\",\n    })\n  );\n\n  const mapped = $derived(\n    singleOption({\n      mapper: () => indexMapper(options),\n      value: () => value,\n      update: (v) => (value = v),\n    })\n  );\n</script>\n\n<select bind:value={mapped.value} {...attributes}>\n  {#if config.schema.default === undefined}\n    <option value={-1}>{attributes.placeholder}</option>\n  {/if}\n  {#each options as option, index (option.id)}\n    <option value={index} disabled={option.disabled}>\n      {option.label}\n    </option>\n  {/each}\n</select>\n", "<script lang=\"ts\" module>\n  import type { HTMLInputAttributes } from \"svelte/elements\";\n\n  declare module \"@sjsf/form\" {\n    interface UiOptions {\n      checkbox?: HTMLInputAttributes;\n    }\n  }\n</script>\n\n<script lang=\"ts\">\n  import {\n    getFormContext,\n    inputAttributes,\n    type ComponentProps,\n  } from \"@sjsf/form\";\n\n  let {\n    config,\n    value = $bindable(),\n    handlers,\n  }: ComponentProps[\"checkboxWidget\"] = $props();\n\n  const ctx = getFormContext();\n\n  const attributes = $derived(\n    inputAttributes(ctx, config, \"checkbox\", handlers, { type: \"checkbox\" })\n  );\n</script>\n\n<label>\n  <input\n    type=\"checkbox\"\n    bind:checked={() => value ?? false, (v) => (value = v)}\n    {...attributes}\n  />\n  {config.title}\n</label>\n"],
  "mappings": "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",
  "names": ["Layout", "Description", "Help", "Layout", "Title", "Description", "Layout", "Layout", "Title", "Description", "Layout", "Layout", "index", "$$anchor", "index"]
}
